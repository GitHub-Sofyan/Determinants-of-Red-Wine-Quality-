# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
# Stage 1a - Preparation of Battlefield - Loading of all relevant dependancies and libaries
library(ggplot2)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
# Stage 1a - Preparation of Battlefield - Loading of all relevant dependancies and libaries
library(ggplot2)
library(ggplot2)
library(dplyr)
library(e1071)
library(gridExtra)
library(Simpsons)
library(GGally)
library(memisc)
library(pander)
library(corrplot)
library(outliers)
wine <- read.csv('C:/Users/sofya_000/Python Notebooks/Udacity Nanodegree/Data Analyst/Project - Exploratory Data Analysis/wineQualityReds.csv')[-1] # Loading the csv file
head(wine) # Reconnaisance of Data - Preview of dataframe
str(wine) # Struture and Details of the Data
summary(wine) # General Descriptive Statistics of the Data
invisible(transform(wine, quality = as.numeric(quality))) # Change quality from int to dbl. It is the only column that is not a dbl. This was added post-hoc due to several ploting errors below. Therefore added this her to minimise errors later.
# Creating String for later analysis - Kurtosis and Skewness
skew = "Skewness: "
kurt = "Kurtosis: "
d.corr = "Correlation :"
ggplot(data = wine, aes(x = quality)) +
geom_bar(width = 1, color = 'white', fill = 'red') +
geom_vline(xintercept = median(as.numeric(wine$quality)), color = "black") +
labs(x = "Quality of wine",
y = "Number of simples",
title = "Distribution of wine Quality")
w.quality <- wine$quality
s.quality <- skewness(w.quality)
k.quality <- kurtosis(w.quality)
sprintf("%s %s", skew, s.quality)
sprintf("%s %s", kurt, k.quality)
summary(w.quality)
attach(wine)
par(mfrow=c(2,6), oma = c(1,1,0,0) + 0.1,  mar = c(3,3,1,1) + 0.1)
boxplot(fixed.acidity, col="slategray2", pch=19)
mtext("Fixed Acidity", cex=0.8, side=1, line=2)
boxplot(volatile.acidity, col="slategray2", pch=19)
mtext("Volatile Acidity", cex=0.8, side=1, line=2)
boxplot(citric.acid, col="slategray2", pch=19)
mtext("Citric Acid", cex=0.8, side=1, line=2)
boxplot(residual.sugar, col="slategray2", pch=19)
mtext("Residual Sugar", cex=0.8, side=1, line=2)
boxplot(chlorides, col="slategray2", pch=19)
mtext("Chlorides", cex=0.8, side=1, line=2)
boxplot(free.sulfur.dioxide, col="slategray2", pch=19)
mtext("Free Sulfur Dioxide", cex=0.8, side=1, line=2)
boxplot(total.sulfur.dioxide, col="slategray2", pch=19)
mtext("Total Sulfur Dioxide", cex=0.8, side=1, line=2)
boxplot(density, col="slategray2", pch=19)
mtext("Density", cex=0.8, side=1, line=2)
boxplot(pH, col="slategray2", pch=19)
mtext("pH Level", cex=0.8, side=1, line=2)
boxplot(sulphates, col="slategray2", pch=19)
mtext("Sulphates", cex=0.8, side=1, line=2)
boxplot(alcohol, col="slategray2", pch=19)
mtext("Alcohol", cex=0.8, side=1, line=2)
biplot(prcomp(wine, scale.=T), xlabs=rep(".", nrow(wine)))
grid.arrange(ggplot(data = wine, aes(x = alcohol)) +
geom_histogram(binwidth = 1, color = 'black',fill = I('yellow')) +
scale_x_continuous(lim = c(5,15)),
ggplot(data = wine, aes(x = factor(quality), y = alcohol)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.alcohol <- wine$alcohol
s.alcohol <- skewness(w.alcohol)
k.alcohol <- kurtosis(w.alcohol)
c.alcohol <- cor (w.alcohol, w.quality)
sprintf("%s %s", skew, s.alcohol)
sprintf("%s %s", kurt, k.alcohol)
sprintf("%s %s", d.corr, c.alcohol)
summary(w.alcohol)
grid.arrange(ggplot(data = wine, aes(x = sulphates)) +
geom_histogram(binwidth = 0.1, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(0,1.5)),
ggplot(data = wine, aes(x = factor(quality), y = sulphates)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.sulphates <- wine$sulphates
s.sulphates <- skewness(w.sulphates)
k.sulphates <- kurtosis(w.sulphates)
c.sulphates <- cor (w.sulphates, w.quality)
sprintf("%s %s", skew, s.sulphates)
sprintf("%s %s", kurt, k.sulphates)
sprintf("%s %s", d.corr, c.sulphates)
summary(w.sulphates)
grid.arrange(ggplot(data = wine, aes(x = total.sulfur.dioxide)) +
geom_histogram(binwidth = 10, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(0,180)),
ggplot(data = wine, aes(x = factor(quality), y = total.sulfur.dioxide)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.tsd <- wine$total.sulfur.dioxide
s.tsd <- skewness(w.tsd)
k.tsd <- kurtosis(w.tsd)
c.tsd <- cor (w.tsd, w.quality)
sprintf("%s %s", skew, s.tsd)
sprintf("%s %s", kurt, k.tsd)
sprintf("%s %s", d.corr, c.tsd)
summary(w.tsd)
grid.arrange(ggplot(data = wine, aes(x = free.sulfur.dioxide)) +
geom_histogram(binwidth = 1, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(0,50)),
ggplot(data = wine, aes(x = factor(quality), y = free.sulfur.dioxide)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.fsd <- wine$free.sulfur.dioxide
s.fsd <- skewness(w.fsd)
k.fsd <- kurtosis(w.fsd)
sprintf("%s %s", skew, s.fsd)
sprintf("%s %s", kurt, k.fsd)
summary(w.fsd)
grid.arrange(ggplot(data = wine, aes(x = density)) +
geom_histogram(binwidth = 0.001, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(0.99,1.005)),
ggplot(data = wine, aes(x = factor(quality), y = density)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.density <- wine$density
s.density <- skewness(w.density)
k.density <- kurtosis(w.density)
c.density <- cor (w.density, w.quality)
sprintf("%s %s", skew, s.density)
sprintf("%s %s", kurt, k.density)
sprintf("%s %s", d.corr, c.density)
summary(w.density)
grid.arrange(ggplot(data = wine, aes(x = volatile.acidity)) +
geom_histogram(binwidth = 0.1, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(0.10,1.6)),
ggplot(data = wine, aes(x = factor(quality), y = volatile.acidity)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.va <- wine$volatile.acidity
s.va <- skewness(w.va)
k.va <- kurtosis(w.va)
c.va <- cor (w.va, w.quality)
sprintf("%s %s", skew, s.va)
sprintf("%s %s", kurt, k.va)
sprintf("%s %s", d.corr, c.va)
summary(w.va)
grid.arrange(ggplot(data = wine, aes(x = fixed.acidity)) +
geom_histogram(binwidth = 1, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(4,16)),
ggplot(data = wine, aes(x = factor(quality), y = fixed.acidity)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.fa <- wine$fixed.acidity
s.fa <- skewness(w.va)
k.fa <- kurtosis(w.fa)
c.fa <- cor (w.fa, w.quality)
sprintf("%s %s", skew, s.fa)
sprintf("%s %s", kurt, k.fa)
sprintf("%s %s", d.corr, c.fa)
summary(w.fa)
grid.arrange(ggplot(data = wine, aes(x = pH)) +
geom_histogram(binwidth = 0.1, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(2.500,4.000)),
ggplot(data = wine, aes(x = factor(quality), y = pH)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.pH <- wine$pH
s.pH <- skewness(w.pH)
k.pH <- kurtosis(w.pH)
c.pH <- cor (w.pH, w.quality)
sprintf("%s %s", skew, s.pH)
sprintf("%s %s", kurt, k.pH)
sprintf("%s %s", d.corr, c.pH)
summary(w.pH)
grid.arrange(ggplot(data = wine, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1, color = 'black',fill = I('light blue')) +
scale_x_continuous(lim = c(2,8)),
ggplot(data = wine, aes(x = factor(quality), y = residual.sugar)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.rs <- wine$residual.sugar
s.rs <- skewness(w.rs)
k.rs <- kurtosis(w.rs)
c.rs <- cor (w.rs, w.quality)
sprintf("%s %s", skew, s.rs)
sprintf("%s %s", kurt, k.rs)
sprintf("%s %s", d.corr, c.rs)
summary(w.rs)
grid.arrange(ggplot(data = wine, aes(x = citric.acid)) +
geom_histogram(binwidth = 0.1, color = 'black',fill = I('orange')) +
scale_x_continuous(lim = c(0,0.8)),
ggplot(data = wine, aes(x = factor(quality), y = citric.acid)) +
geom_jitter( alpha = .3) +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4),ncol = 2)
w.ca <- wine$citric.acid
s.ca <- skewness(w.ca)
k.ca <- kurtosis(w.ca)
c.ca <- cor (w.ca, w.quality)
sprintf("%s %s", skew, s.ca)
sprintf("%s %s", kurt, k.ca)
sprintf("%s %s", d.corr, c.ca)
summary(w.ca)
# Finding correlation between 2 variables (Graphical Detail)
wine_cor <- as.matrix(wine)
# Plotting correlation graph
corrplot(cor(wine_cor), method = c("circle")) # Graphical
corrplot(cor(wine_cor), method = c("number")) # Numbers
# Finding correlation between 2 variables (Numeric Detail)
bc <- cor(
wine %>%
mutate(quality = as.numeric(quality)) # mutate quality (to numeric) to fix           check_caption for pandoc.table
) # close
pandoc.table(bc, style = 'simple') # present correlation (bc) as a simple table.
wine$quality <- as.factor(wine$quality) # Turn quality into a factor                               (as opposed to continuous scale)
ggplot(data = wine,
aes(y = density, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.density <- cor (w.density, w.alcohol)
sprintf("%s %s", d.corr, c2.density)
ggplot(data = wine,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.sulphates <- cor (w.sulphates, w.alcohol)
sprintf("%s %s", d.corr, c.sulphates)
ggplot(data = wine,
aes(y = volatile.acidity, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.va <- cor (w.va, w.alcohol)
sprintf("%s %s", d.corr, c.va)
ggplot(data = wine,
aes(y = pH, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.pH <- cor (w.pH, w.alcohol)
sprintf("%s %s", d.corr, c.pH)
ggplot(data = wine,
aes(y = residual.sugar, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.rs <- cor (w.rs, w.alcohol)
sprintf("%s %s", d.corr, c.rs)
ggplot(data = wine,
aes(y = total.sulfur.dioxide, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.tsd <- cor (w.tsd, w.alcohol)
sprintf("%s %s", d.corr, c2.tsd)
ggplot(data = wine,
aes(y = citric.acid, x = volatile.acidity,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.ca <- cor (w.ca, w.va)
sprintf("%s %s", d.corr, c2.ca)
ggplot(data = wine,
aes(y = fixed.acidity, x = volatile.acidity,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.fa <- cor (w.fa, w.va)
sprintf("%s %s", d.corr, c2.fa)
ggplot(data = wine,
aes(y = fixed.acidity, x = citric.acid,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
c2.fa <- cor (w.fa, w.ca)
sprintf("%s %s", d.corr, c2.fa)
focused_data <- sample_frac(wine, .6)
m1 <- lm(as.numeric(quality) ~ alcohol, data = focused_data)
m2 <- update(m1, ~ . + sulphates)
m3 <- update(m2, ~ . + volatile.acidity)
m4 <- update(m3, ~ . + citric.acid)
m5 <- update(m4, ~ . + fixed.acidity)
m6 <- update(m5, ~ . + density)
m7 <- update(m2, ~ . + pH)
m8 <- update(m3, ~ . + fixed.acidity + density + pH)
mtable(m1,m2,m3,m4,m5,m6,m7,m8)
# Testing the Accuracy of our model
acc_model <- predict(m5, newdata = wine,interval = "prediction", level = 0.95)
predicted.quality <- round(as.data.frame(acc_model)$fit,0)
sum(predicted.quality == wine$quality)/nrow(wine)
trialwine = data.frame(alcohol= 15, sulphates= 0.45, volatile.acidity = 0.4)
modelEstimate.example = predict(m3, newdata = trialwine,
interval="prediction", level = .95)
predicted.quality.trial <- round(as.data.frame(modelEstimate.example)$fit,0)
answer <- as.numeric(predicted.quality.trial)
print(answer)
trialwine8 = data.frame(alcohol= 10, sulphates= 0.47, volatile.acidity = 0.5,
citric.acid = 0.00, fixed.acidity = 7.3, density = 0.99460)
modelEstimate.example = predict(m6, newdata = trialwine8,
interval="prediction", level = .95)
predicted.quality.trial <- round(as.data.frame(modelEstimate.example)$fit,0)
answer <- as.numeric(predicted.quality.trial)
print(answer)
trialwine8 = data.frame(alcohol= 10, sulphates= 0.47, volatile.acidity = 0.5,
fixed.acidity = 7.3, density = 0.99460, pH = 3.39)
modelEstimate.example = predict(m8, newdata = trialwine8,
interval="prediction", level = .95)
predicted.quality.trial <- round(as.data.frame(modelEstimate.example)$fit,0)
answer <- as.numeric(predicted.quality.trial)
print(answer)
ggplot(data = wine, aes(x = quality)) +
geom_bar(width = 1, color = 'white', fill = 'red') +
geom_vline(xintercept = median(as.numeric(wine$quality)), color = "black") +
labs(x = "Quality of wine",
y = "Count of samples",
title = "Final Plot 1 - Distribution of Wine Quality")
summary(wine$quality)
ggplot(data=wine, aes(y=alcohol, x=factor(quality))) +
geom_jitter(alpha = .3)  +
geom_boxplot(alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality (0 - 10)") +
ylab("Alcohol Percentage (%)") +
ggtitle(
"Final Plot 2 - Influence of Alcohol percentage (% by volume) on the Quality of Wine")
plot <- ggplot(data = wine,
aes(y = volatile.acidity, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
theme_dark() +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality(0-10)'))
plot +
ggtitle("Final Plot 3 - Influence of Volatile Acidity + Alcohol on Wine Quality")
